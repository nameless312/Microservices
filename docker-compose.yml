services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: nameless
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - spring

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - spring

  eureka-server:
    image: nameless312/eureka-server:latest
    container_name: eureka-server
    ports:
      - "8761:8761"
    depends_on:
      - zipkin
    networks:
      - spring
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    volumes:
      - ./tmp/logs/eureka:/logs

  api-gateway:
    image: nameless312/api-gateway:latest
    container_name: api-gateway
    ports:
      - "8083:8083"
    depends_on:
      - zipkin
      - eureka-server
    networks:
      - spring
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    volumes:
      - ./tmp/logs/gateway:/logs

  customer:
    image: nameless312/customer:latest
    container_name: customer
    ports:
      - "8080:8080"
    depends_on:
      - zipkin
      - eureka-server
      - postgres
      - rabbitmq
    networks:
      - spring
      - postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    volumes:
      - ./tmp/logs/customer:/logs

  fraud:
    image: nameless312/fraud:latest
    container_name: fraud
    ports:
      - "8081:8081"
    depends_on:
      - zipkin
      - eureka-server
      - postgres
      - rabbitmq
    networks:
      - spring
      - postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    volumes:
      - ./tmp/logs/fraud:/logs

  notification:
    image: nameless312/notification:latest
    container_name: notification
    ports:
      - "8082:8082"
    depends_on:
      - zipkin
      - eureka-server
      - postgres
      - rabbitmq
    networks:
      - spring
      - postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    volumes:
      - ./tmp/logs/notification:/logs

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - elk

  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.2
    container_name: logstash
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - /tmp/logs:/logs
    ports:
      - "5000:5000"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.2
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - ELASTIC_PASSWORD=No6RI9tl3MCXtNK3EjB7
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

networks:
  postgres:
    driver: bridge
  spring:
    driver: bridge
  elk:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_icc: "true"

volumes:
  postgres:
  pgadmin: